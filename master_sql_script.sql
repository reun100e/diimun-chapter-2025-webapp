-- ========= DIIMUN 2025: FINAL & COMPLETE DATABASE MIGRATION (v5) =========

-- ========= SECTION 1: CREATE THE REGISTRATIONS TABLE =========
-- The definitive schema, perfectly aligned with the final React form.

CREATE TABLE public.registrations (
  -- Core Columns
  id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  created_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  updated_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  
  -- User Information
  name text,
  email text UNIQUE NOT NULL, -- UNIQUE is essential for the partial-save 'upsert' to work
  whatsapp_number text,
  college text,
  year text,
  committee_preference text, -- Stores the final role: WHO, Assembly, IP - Photography, or IP - Essay
  
  -- Registration & Payment Details
  has_registered_esperanza text, -- 'yes' or 'no'
  registration_amount numeric,   -- Stores the final amount paid (499 or 347)
  
  -- Payment Screenshot URLs
  mun_payment_photo_url text,
  esperanza_payment_photo_url text,
  
  -- Internal Status Tracking
  status text NOT NULL DEFAULT 'Partial'::text -- Defaults to 'Partial' for our abandonment feature
);


-- ========= SECTION 2: AUTOMATE THE `updated_at` TIMESTAMP =========
-- This trigger automatically updates `updated_at` on any change, which is key for our abandonment logic.

CREATE OR REPLACE FUNCTION public.handle_updated_at()
RETURNS TRIGGER AS $$
BEGIN
  NEW.updated_at = timezone('utc'::text, now());
  RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER on_registration_update
  BEFORE UPDATE ON public.registrations
  FOR EACH ROW
  EXECUTE PROCEDURE public.handle_updated_at();


-- ========= SECTION 3: ENABLE AND CONFIGURE THE CRON JOB =========
-- This sets up an automated job to find and tag abandoned leads.

-- 3.1: Enable the pg_cron extension
CREATE EXTENSION IF NOT EXISTS pg_cron;

-- 3.2: Create the function that finds and marks abandoned leads
CREATE OR REPLACE FUNCTION public.mark_abandoned_leads()
RETURNS void AS $$
  UPDATE public.registrations
  SET status = 'Abandoned'
  WHERE 
    status = 'Partial' AND 
    updated_at < (now() - interval '1 hour');
$$ LANGUAGE sql;

-- 3.3: Schedule the job to run every 15 minutes
SELECT cron.schedule(
  '15-minute-abandoned-lead-check',
  '*/15 * * * *', -- Cron syntax for "at minutes 0, 15, 30, and 45 of every hour"
  'SELECT public.mark_abandoned_leads()'
);


-- ========= SECTION 4: SET UP SECURITY POLICIES =========
-- 4.1: Disable Row Level Security (RLS) on the table
ALTER TABLE public.registrations DISABLE ROW LEVEL SECURITY;

-- 4.2: Create the Storage Policy for anonymous uploads
-- NOTE: You must manually create a bucket named 'payment-screenshots'.
CREATE POLICY "Allow anonymous uploads to payment screenshots"
ON storage.objects FOR INSERT
TO anon
WITH CHECK ( bucket_id = 'payment-screenshots' );

-- ======================= END OF SCRIPT =======================